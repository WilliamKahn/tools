package {{ packages['Controller'] }};

import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import io.swagger.annotations.ApiOperation;
import java.util.List;
import javax.annotation.Resource;
import javax.validation.Valid;
import {{ packages['Dto']}}.{{ TableName }}Dto;
import {{ packages['Service']}}.{{ TableName }}Service;
import {{ packages['QueryVo']}}.{{ TableName }}QueryVo;
import {{ packages['Vo']}}.{{ TableName }}Vo;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

/**
 * @author wanglk
 */
@RestController
@RequestMapping("{{ table_name|replace('_', '/') }}")
public class {{ TableName }}Controller {

    @Resource
    private {{ TableName }}Service {{ tableName }}Service;

    @PostMapping()
    @ApiOperation("新增{{ table_remark }}")
    public Result<Boolean> add{{ TableName }}(@RequestBody {{ TableName }}Vo {{ tableName }}Vo) {
        {{ tableName }}Service.add{{ TableName }}({{ tableName }}Vo);
        return Result.success(true);
    }

    @PutMapping()
    @ApiOperation("修改{{ table_remark }}")
    public Result<Boolean> update{{ TableName }}(@RequestBody {{ TableName }}Vo {{ tableName }}Vo) {
        {{ tableName }}Service.update{{ TableName }}({{ tableName }}Vo);
        return Result.success(true);
    }

    @DeleteMapping("/{id}")
    @ApiOperation("删除{{ table_remark }}")
    public Result<Boolean> delete{{ TableName }}(@PathVariable("id") Long id) {
        {{ tableName }}Service.updateStatus(batchEntityVo);
        return Result.success(true);
    }

    @GetMapping("/{id}")
    public Result<{{ TableName }}> get{{ TableName }}(@PathVariable("id") Long id) {
        return success(TbMovieConvert.INSTANCE.convert(tbMovieService.getTbMovie(id)));
    }

    @PostMapping("/page")
    @ApiOperation("{{ table_remark }}分页列表")
    public Result<Page<{{ TableName }}Dto>> page{{ TableName }}(@RequestBody {{ TableName }}QueryVo {{ tableName }}QueryVo) {
        Page<{{ TableName }}Dto> {{ tableName }}DtoPage = {{ tableName }}Service.selectPage({{ tableName }}QueryVo);
        return Result.success({{ tableName }}DtoPage);
    }

}

