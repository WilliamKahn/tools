package {{ packages['ServiceImpl'] }};

import {{ packages['DO'] }}.{{ TableName }}DO;
import {{ packages['DAO'] }}.{{ TableName }}DAO;
import {{ packages['Service'] }}.{{ TableName }}Service;
import {{ packages['QueryDTO'] }}.{{ TableName }}QueryDTO;
import {{ packages['VO'] }}.{{ TableName }}VO;
import {{ packages['ListVO'] }}.{{ TableName }}ListVO;
import {{ packages['CreateVO'] }}.{{ TableName }}CreateVO;
import {{ packages['UpdateVO'] }}.{{ TableName }}UpdateVO;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import org.springframework.beans.BeanUtils;
import org.springframework.stereotype.Service;
import javax.annotation.Resource;
import java.util.List;
import java.util.stream.Collectors;

/**
 * @author {{ author }}
 */
@Service
public class {{ TableName }}ServiceImpl implements {{ TableName }}Service {

    @Resource
    private {{ TableName }}DAO {{ tableName }}DAO;

    @Override
    public void create{{ TableName }}({{ TableName }}CreateVO {{ tableName }}CreateVO) {
        {{ TableName }}DO {{ tableName }}DO = new {{ TableName }}DO();
        BeanUtils.copyProperties({{ tableName }}CreateVO, {{ tableName }}DO);
        {{ tableName }}DAO.save({{ tableName }}DO);
    }

    @Override
    public void update{{ TableName }}({{ TableName }}UpdateVO {{ tableName }}UpdateVO) {
        {{ TableName }}DO {{ tableName }}DO = new {{ TableName }}DO();
        BeanUtils.copyProperties({{ tableName }}UpdateVO, {{ tableName }}DO);
        {{ tableName }}DAO.updateById({{ tableName }}DO);
    }

    @Override
    public void delete{{ TableName }}(List<{{ id_type }}> {{ primary_key }}s) {
        {{ tableName }}DAO.removeBatchByIds({{ primary_key }}s);
    }

    @Override
    public {{ TableName }}VO get{{ TableName }}({{ id_type }} {{ primary_key }}) {
        {{ TableName }}DO {{ tableName }}DO = {{ tableName }}DAO.getById({{ primary_key }});
        {{ TableName }}VO result = new {{ TableName }}VO();
        BeanUtils.copyProperties({{ tableName }}DO, result);
        return result;
    }

    @Override
    public PageInfo<{{ TableName }}ListVO> page{{ TableName }}({{ TableName }}QueryDTO {{ tableName }}QueryDTO) {
        PageHelper.startPage({{ tableName }}QueryDTO.getPageNum(), {{ tableName }}QueryDTO.getPageSize());
        List<{{ TableName }}DO> list = {{ tableName }}DAO.list();
        PageInfo result = new PageInfo<>(list);
        List<{{ TableName }}ListVO> ListVO = list.stream().map(entity -> {
            {{ TableName }}ListVO vo = new {{ TableName }}ListVO();
            BeanUtils.copyProperties(entity, vo);
            return vo;
        }).collect(Collectors.toList());
        result.setList(ListVO);
        return result;
    }
}
