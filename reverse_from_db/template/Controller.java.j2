package {{ packages['Controller'] }};

import {{ packages['Vo']}}.{{ TableName }}Vo;
import {{ packages['ListVo'] }}.{{ TableName }}ListVo;
import {{ packages['Service']}}.{{ TableName }}Service;
import {{ packages['QueryVo']}}.{{ TableName }}QueryVo;
import {{ packages['CreateVo']}}.{{ TableName }}CreateVo;
import {{ packages['UpdateVo']}}.{{ TableName }}UpdateVo;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import javax.annotation.Resource;
import org.springframework.web.bind.annotation.*;

/**
 * @author {{ author }}
 */
@Api(tags = "{{ remark }}")
@RestController
@RequestMapping("{{ table_name|replace('_', '/') }}")
public class {{ TableName }}Controller {

    @Resource
    private {{ TableName }}Service {{ tableName }}Service;

    @PostMapping()
    @ApiOperation("新增{{ remark }}")
    public {{ resultful }}<Boolean> create{{ TableName }}(@RequestBody {{ TableName }}CreateVo {{ tableName }}CreateVo) {
        {{ tableName }}Service.create{{ TableName }}({{ tableName }}CreateVo);
        return null;
    }

    @PutMapping()
    @ApiOperation("修改{{ remark }}")
    public {{ resultful }}<Boolean> update{{ TableName }}(@RequestBody {{ TableName }}UpdateVo {{ tableName }}UpdateVo) {
        {{ tableName }}Service.update{{ TableName }}({{ tableName }}UpdateVo);
        return null;
    }

    @DeleteMapping()
    @ApiOperation("删除{{ remark }}")
    public {{ resultful }}<Boolean> delete{{ TableName }}(@RequestParam List<{{ id_type }}> ids) {
        {{ tableName }}Service.delete{{ TableName }}(ids);
        return null;
    }

    @GetMapping()
    @ApiOperation("{{ remark }}详情")
    public {{ resultful }}<{{ TableName }}Vo> get{{ TableName }}(@RequestParam {{ id_type }} id) {
        {{ TableName }}Vo {{ tableName }}Vo = {{ tableName }}Service.get{{ TableName }}(id);
        return null;
    }

    @GetMapping("/page")
    @ApiOperation("{{ remark }}分页")
    public {{ resultful }}<PageInfo<{{ TableName }}ListVo>> page{{ TableName }}(@RequestParam {{ TableName }}QueryVo {{ tableName }}QueryVo) {
        PageInfo<{{ TableName }}ListVo> {{ tableName }}Page = {{ tableName }}Service.page{{ TableName }}({{ tableName }}QueryVo);
        return null;
    }
}

